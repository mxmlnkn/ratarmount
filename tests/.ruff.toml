line-length = 120
target-version = "py39"

[lint]
select = [
    "A", "B", "E", "F", "G", "I", "W", "N", "ASYNC", "C4", "COM", "FLY", "FURB", "ICN", "INT", "ISC", "LOG",
    "PERF", "PIE", "PLW", "PT", "PYI", "RET", "RSE", "RUF", "SIM", "TID", "TC", "UP", "YTT"
]
ignore = [
    # Preview. Complaining about spaces (aligned arguments) should be a formatter option, not a linter one!
    # https://github.com/astral-sh/ruff/issues/2402
    "E201", "E202", "E203", "E211", "E221", "E226", "E251", "E265", "E266", "E271",
    "E501",     # A linter should lint, not check for line lengths!
    "F401",     # Wants to from .version import __version__ as __version__ which clashes with pylint errors!
    "N803",     # Argument names are camelCase instead of snake_case (400+ errors).
    "N806",     # Variable names are camelCase instead of snake_case (1100+ errors).
    "N815",     # Class-scope variable names are camelCase instead of snake_case (10 errors).
    "N816",     # Global variable names are camelCase instead of snake_case (73 errors).
    "N999",     # Module names are CamelCase like the classes they provide instead of snake_case (11 errors).
    "COM812",   # Do not force trailing commas where it makes no sense, e.g., function calls for which I'll
                # never add more arguments.
    "PERF203",  # Some code parts HAVE to try-except inside loops because only the element should be skipped,
                # not the whole loop being broken out of. Furthermore, this is a useless micro-optimization,
                # which is actually removed for Python 3.11+ which introduces zero-cost exceptions.
    "PLW0603",  # Cannot live without global statements, especially for subprocessing.
    "PLW2901",  # Only false positives for constructs such as for data in ...: data = data.clean(); process(data)
    "RUF001",   # Only false positives from tests with Unicode characters.
    "RUF039",   # https://github.com/astral-sh/ruff/issues/18795
    "RUF056",   # "options.get('disableUnionMount', False):" Wants me to change False to None,
                # but it makes no sense semantically (expecting a bool)
    "RUF100",   # BUG: removes necessary noqa: E402 in tests!

    "SIM115",   # Too many locations where I do not know how to use context managers for files,
                # which are stored as object members for example!
    "TC006",    # Wants to quote cast("IO[bytes]", ...) I don't agree with this style choice.
    "S101", "S110", "S105", "S311", "S324", "S603", "S607", "S608"

    # Bug: SIM118 removes the keys() from row.keys(), which is an sqlite3.Row not a Dict!
]
# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

[format]
line-ending = "lf"
quote-style = "preserve"

