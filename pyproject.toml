# See https://setuptools.readthedocs.io/en/latest/build_meta.html

[build-system]
# Use setuptools >= 43 because it automatically includes pyproject.toml in source distribution
# Use setuptools >= 46.5 to use attr: package.__version__
# Use setuptools >= 61 for pyproject.toml support
# Use setuptools >= 70.1 for built-in bdist_wheel which obsoletes the wheel standalone package
# https://setuptools.readthedocs.io/en/latest/history.html#id284
# Use setuptools <= 82 because the license specification changes backward-incompatible in 2026-02.
# https://github.com/pypa/setuptools/issues/4903#issuecomment-2923109576
requires = ["setuptools >= 61, <= 82", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ratarmount"
description = "Random Access To Archived Resources"
authors = [{name = "Maximilian Knespel", email = "mxmlnknp@gmail.com"}]
license = {text = "MIT"}
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Development Status :: 4 - Beta",
    "Natural Language :: English",
    "Operating System :: MacOS",
    "Operating System :: Unix",
    "Programming Language :: Python :: 3",
    # I am unsure about the semantic of these. For actualy compatibility, there is 'requires-python'.
    # These are only informational, and therefore I think it should be fine to list older Python versions,
    # which do not work with the current version of this project, but for which there exists older versions
    # of this project that are still installable and usable.
    "Programming Language :: Python :: 3.6",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
    "Topic :: System :: Archiving",
    "Topic :: System :: Archiving :: Compression",
    "Topic :: System :: Filesystems",
    "Topic :: Utilities",
]
urls = {Homepage = "https://github.com/mxmlnkn/ratarmount"}
requires-python = ">= 3.7"
dependencies = [
    # https://pip.pypa.io/en/stable/reference/requirement-specifiers/
    # https://packaging.python.org/en/latest/glossary/#term-Requirement-Specifier
    # https://packaging.python.org/en/latest/specifications/dependency-specifiers/#dependency-specifiers
    "ratarmountcore[7z, bzip2, fat, gzip, rar, xz, zip, zstd] ~= 0.9.0",
    "mfusepy ~= 1.0",
]
dynamic = ["version"]

[project.readme]
file = "README.md"
content-type = "text/markdown"

[project.optional-dependencies]
full = ["ratarmountcore[full]"]
bzip2 = ["ratarmountcore[bzip2]"]
gzip = ["ratarmountcore[gzip]"]
rar = ["ratarmountcore[rar]"]
xz = ["ratarmountcore[xz]"]
zip = ["ratarmountcore[zip]"]
zstd = ["ratarmountcore[zstd]"]
squashfs = ["ratarmountcore[squashfs]"]
fsspec = ["ratarmountcore[fsspec-backends]"]
# Not included in 'full' for now because only encrypted SQLAR require dependencies and those are not well-maintained.
sqlar = ["ratarmountcore[sqlar]"]
7z = ["ratarmountcore[7z]"]
fat = ["ratarmountcore[fat]"]
ext4 = ["ratarmountcore[ext4]"]
git = ["ratarmountcore[git]"]

[project.scripts]
ratarmount = "ratarmount.cli:cli"

[tool.setuptools]
packages = ["ratarmount"]
license-files = ["LICENSE"]

[tool.codespell]
# fsspec uses cachable instead of cacheable ...
ignore-words-list = "fo,Nd,unx,cachable"

[tool.setuptools.dynamic]
version = {attr = "ratarmount.version.__version__"}
